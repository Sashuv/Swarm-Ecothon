{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nconst useGeoLocation = () => {\n  _s();\n  const [location, setLocation] = useState({\n    loaded: false,\n    coordinates: {\n      lat: \"\",\n      lng: \"\"\n    }\n  });\n  const onSuccess = location => {\n    setLocation({\n      loaded: true,\n      coordinates: {\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      }\n    });\n  };\n  const onError = error => {\n    setLocation({\n      loaded: true,\n      error\n    });\n  };\n  useEffect(() => {\n    if (!(\"geolocation\" in navigator)) {\n      setLocation(state => ({\n        ...state,\n        loaded: true,\n        error: {\n          code: 0,\n          message: \"Geolocation Not supported.\"\n        }\n      }));\n    }\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  }, []);\n  return location;\n};\n_s(useGeoLocation, \"myuteRrD2htUmPV8PmZcEyJSQY4=\");\nexport default useGeoLocation;","map":{"version":3,"names":["React","useEffect","useState","useGeoLocation","_s","location","setLocation","loaded","coordinates","lat","lng","onSuccess","coords","latitude","longitude","onError","error","navigator","state","code","message","geolocation","getCurrentPosition"],"sources":["/Users/sashuv/Documents/work/bee/src/useGeoLocation.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nconst useGeoLocation = () => {\n    const [location, setLocation] = useState({\n        loaded: false,\n        coordinates: { lat: \"\", lng: \"\"}\n    });\n\n    const onSuccess = (location) => {\n        setLocation({\n            loaded:true,\n            coordinates: {\n                lat: location.coords.latitude,\n                lng: location.coords.longitude,\n            },\n        })\n    };\n\n    const onError = (error) => {\n        setLocation({\n            loaded:true,\n            error,\n        })\n    };\n    useEffect(() => {\n        if (!(\"geolocation\" in navigator)) {\n            setLocation((state) => ({\n                ...state,\n                loaded: true,\n                error : {\n                    code: 0,\n                    message: \"Geolocation Not supported.\"\n                },\n            }));\n        }\n        navigator.geolocation.getCurrentPosition(onSuccess, onError);\n    },[])\n    return location;\n}\n\nexport default useGeoLocation;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEhD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC;IACrCK,MAAM,EAAE,KAAK;IACbC,WAAW,EAAE;MAAEC,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAE;EACnC,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAIN,QAAQ,IAAK;IAC5BC,WAAW,CAAC;MACRC,MAAM,EAAC,IAAI;MACXC,WAAW,EAAE;QACTC,GAAG,EAAEJ,QAAQ,CAACO,MAAM,CAACC,QAAQ;QAC7BH,GAAG,EAAEL,QAAQ,CAACO,MAAM,CAACE;MACzB;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,OAAO,GAAIC,KAAK,IAAK;IACvBV,WAAW,CAAC;MACRC,MAAM,EAAC,IAAI;MACXS;IACJ,CAAC,CAAC;EACN,CAAC;EACDf,SAAS,CAAC,MAAM;IACZ,IAAI,EAAE,aAAa,IAAIgB,SAAS,CAAC,EAAE;MAC/BX,WAAW,CAAEY,KAAK,KAAM;QACpB,GAAGA,KAAK;QACRX,MAAM,EAAE,IAAI;QACZS,KAAK,EAAG;UACJG,IAAI,EAAE,CAAC;UACPC,OAAO,EAAE;QACb;MACJ,CAAC,CAAC,CAAC;IACP;IACAH,SAAS,CAACI,WAAW,CAACC,kBAAkB,CAACX,SAAS,EAAEI,OAAO,CAAC;EAChE,CAAC,EAAC,EAAE,CAAC;EACL,OAAOV,QAAQ;AACnB,CAAC;AAAAD,EAAA,CApCKD,cAAc;AAsCpB,eAAeA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}