{"ast":null,"code":"var _jsxFileName = \"/Users/sashuv/Desktop/commit/Swarm-Bee-Community/src/Input.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Make sure to import useNavigate from react-router-dom\nimport useGeoLocation from './useGeoLocation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputForm({\n  selectedBeeName\n}) {\n  _s();\n  const [inputs, setInputs] = useState({\n    imageUrl: '',\n    caption: '',\n    username: '',\n    name: selectedBeeName\n  });\n  const [submissionStatus, setSubmissionStatus] = useState(''); // State to manage submission status message\n  const navigate = useNavigate(); // Hook for navigation\n  const location = useGeoLocation();\n  const handleChange = e => {\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (location.loaded && !location.error) {\n      const postData = {\n        ...inputs,\n        Latitude: location.coordinates.lat,\n        Longitude: location.coordinates.lng\n      };\n      console.log(postData);\n      fetch('http://localhost:3001/data', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postData)\n      }).then(response => response.json()).then(data => {\n        console.log('Success:', data);\n        setSubmissionStatus('Submission Done'); // Update submission status message\n        setTimeout(() => navigate('/'), 2000); // Navigate back to home page after 2 seconds\n      }).catch(error => {\n        console.error('Error:', error);\n        setSubmissionStatus('Submission Failed'); // Update status message on error\n      });\n    } else {\n      console.error('Geolocation not loaded or error:', location.error);\n      setSubmissionStatus('Geolocation error, try again.'); // Update status message on geolocation error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"imageUrl\",\n      value: inputs.imageUrl,\n      onChange: handleChange,\n      placeholder: \"Image URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"caption\",\n      value: inputs.caption,\n      onChange: handleChange,\n      placeholder: \"Caption\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: inputs.username,\n      onChange: handleChange,\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), submissionStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: submissionStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 34\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(InputForm, \"4xTe/SZ3n77LYU7aST5DvfhGQPc=\", false, function () {\n  return [useNavigate, useGeoLocation];\n});\n_c = InputForm;\nexport default InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["React","useState","useNavigate","useGeoLocation","jsxDEV","_jsxDEV","InputForm","selectedBeeName","_s","inputs","setInputs","imageUrl","caption","username","name","submissionStatus","setSubmissionStatus","navigate","location","handleChange","e","target","value","handleSubmit","preventDefault","loaded","error","postData","Latitude","coordinates","lat","Longitude","lng","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","setTimeout","catch","onSubmit","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sashuv/Desktop/commit/Swarm-Bee-Community/src/Input.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Make sure to import useNavigate from react-router-dom\nimport useGeoLocation from './useGeoLocation';\n\nfunction InputForm({ selectedBeeName }) {\n    const [inputs, setInputs] = useState({\n        imageUrl: '',\n        caption: '',\n        username: '',\n        name: selectedBeeName,\n    });\n    const [submissionStatus, setSubmissionStatus] = useState(''); // State to manage submission status message\n    const navigate = useNavigate(); // Hook for navigation\n    const location = useGeoLocation();\n\n    const handleChange = (e) => {\n        setInputs({ ...inputs, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (location.loaded && !location.error) {\n            const postData = {\n                ...inputs,\n                Latitude: location.coordinates.lat,\n                Longitude: location.coordinates.lng\n            };\n            console.log(postData);\n            fetch('http://localhost:3001/data', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(postData)\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data);\n                setSubmissionStatus('Submission Done'); // Update submission status message\n                setTimeout(() => navigate('/'), 2000); // Navigate back to home page after 2 seconds\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                setSubmissionStatus('Submission Failed'); // Update status message on error\n            });\n        } else {\n            console.error('Geolocation not loaded or error:', location.error);\n            setSubmissionStatus('Geolocation error, try again.'); // Update status message on geolocation error\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" name=\"imageUrl\" value={inputs.imageUrl} onChange={handleChange} placeholder=\"Image URL\" />\n            <input type=\"text\" name=\"caption\" value={inputs.caption} onChange={handleChange} placeholder=\"Caption\" />\n            <input type=\"text\" name=\"username\" value={inputs.username} onChange={handleChange} placeholder=\"Username\" />\n            <button type=\"submit\">Submit</button>\n            {submissionStatus && <p>{submissionStatus}</p>} {/* Display submission status message */}\n        </form>\n    );\n}\n\nexport default InputForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}